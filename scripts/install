#!/bin/bash

source /usr/share/yunohost/helpers

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1
ynh_setup_source --dest_dir="$install_dir/source"

#=================================================
# PYTHON VIRTUALENV
#=================================================
ynh_script_progression --message="Create Python virtualenv..." --weight=5

# Always recreate everything fresh with current python version
ynh_secure_remove "${install_dir}/venv"

# Skip pip because of: https://github.com/YunoHost/issues/issues/1960
python3 -m venv --without-pip "${install_dir}/venv"

chown -R "$app:" "$install_dir"

#=================================================
# PIP INSTALLATION
#=================================================
ynh_script_progression --message="Install project via pip..." --weight=45

#run source in a 'sub shell'
(
	set +o nounset
	source "${install_dir}/venv/bin/activate"
	set -o nounset
	ynh_exec_as $app $install_dir/venv/bin/python3 -m ensurepip
	ynh_exec_as $app $install_dir/venv/bin/pip3 install --upgrade wheel pip setuptools
	ynh_exec_as $app $install_dir/venv/bin/pip3 install "${install_dir}/source"
)

echo "Hello world!" > $install_dir/index.html

# $install_dir will automatically be initialized with some decent 
# permission by default ... however, you may need to recursively reapply
# ownership to all files such as after the ynh_setup_source step
chown -R $app:www-data "$install_dir"

chown -R www-data: "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring nginx web server..." --weight=1

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# ADD SERVICE MOSQUITTO TO ADMIN PANEL
#=================================================

#yunohost service add mosquitto --log "/var/log/mosquitto/mosquitto.log"

#cp ../conf/wg0.conf /etc/wireguard/wg0.conf
#systemctl enable wg-quick@wg0

# allow IP-Forwarding
#sed -i s/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g /etc/sysctl.conf
#sysctl -p

#=================================================
# ADD SELECTED SERVICES TO SYSTEM
#=================================================
ynh_script_progression --message="add selected apps" --weight=1


if [ $rainradar -eq 1 ]; then
	ynh_script_progression --message="activate rainradar" --weight=1
	ynh_add_systemd_config --service=rainradar --template=./config/rainradard.conf
	
	ynh_add_config --template="rainradar.conf" --destination="$install_dir/rainradar.conf"
	chmod 400 "$install_dir/rainradar.conf"
	chown $app:$app "$install_dir/rainradar.conf"
	
	yunohost service add rainradar --description="virtual rainsensor"
fi

if [ $vpnCtrl -eq 1 ]; then
	ynh_script_progression --message="activate vpnController" --weight=1
	ynh_add_systemd_config --service=vpnController --template=./config/vpnControllerd.conf
	
	yunohost service add vpnController --description="controller of VPN enpoints"
fi

if [ $serialMqtt -eq 1 ]; then
	ynh_script_progression --message="activate serialMqttBridge" --weight=1
	ynh_add_systemd_config --service=serialMqtt --template=serialMqttd.conf
	
	yunohost service add serialMqtt --description="bridge MQTT to serial"
fi
